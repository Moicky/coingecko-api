/* tslint:disable */
/* eslint-disable */
/**
 * On Chain DEX API (Beta)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Trades,
} from '../models/index';
import {
    TradesFromJSON,
    TradesToJSON,
} from '../models/index';

export interface PoolTradesContractAddressRequest {
    network: string;
    poolAddress: string;
    tradeVolumeInUsdGreaterThan?: number;
}

/**
 * TradesApi - interface
 * 
 * @export
 * @interface TradesApiInterface
 */
export interface TradesApiInterface {
    /**
     * This endpoint allows you to **query the last 300 trades in the past 24 hours based on the provided pool address**
     * @summary Past 24 Hour Trades by Pool Address
     * @param {string} network network id  &lt;br&gt; *refers to [/networks](/reference/networks-list) 
     * @param {string} poolAddress pool contract address
     * @param {number} [tradeVolumeInUsdGreaterThan] filter trades by trade volume in USD greater than this value &lt;br&gt; Default value: 0
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TradesApiInterface
     */
    poolTradesContractAddressRaw(requestParameters: PoolTradesContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Trades>>;

    /**
     * This endpoint allows you to **query the last 300 trades in the past 24 hours based on the provided pool address**
     * Past 24 Hour Trades by Pool Address
     */
    poolTradesContractAddress(requestParameters: PoolTradesContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Trades>;

}

/**
 * 
 */
export class TradesApi extends runtime.BaseAPI implements TradesApiInterface {

    /**
     * This endpoint allows you to **query the last 300 trades in the past 24 hours based on the provided pool address**
     * Past 24 Hour Trades by Pool Address
     */
    async poolTradesContractAddressRaw(requestParameters: PoolTradesContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Trades>> {
        if (requestParameters['network'] == null) {
            throw new runtime.RequiredError(
                'network',
                'Required parameter "network" was null or undefined when calling poolTradesContractAddress().'
            );
        }

        if (requestParameters['poolAddress'] == null) {
            throw new runtime.RequiredError(
                'poolAddress',
                'Required parameter "poolAddress" was null or undefined when calling poolTradesContractAddress().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['tradeVolumeInUsdGreaterThan'] != null) {
            queryParameters['trade_volume_in_usd_greater_than'] = requestParameters['tradeVolumeInUsdGreaterThan'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/networks/{network}/pools/{pool_address}/trades`.replace(`{${"network"}}`, encodeURIComponent(String(requestParameters['network']))).replace(`{${"pool_address"}}`, encodeURIComponent(String(requestParameters['poolAddress']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TradesFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to **query the last 300 trades in the past 24 hours based on the provided pool address**
     * Past 24 Hour Trades by Pool Address
     */
    async poolTradesContractAddress(requestParameters: PoolTradesContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Trades> {
        const response = await this.poolTradesContractAddressRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

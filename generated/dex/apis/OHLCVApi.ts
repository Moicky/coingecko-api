/* tslint:disable */
/* eslint-disable */
/**
 * On Chain DEX API (Beta)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  OHLCV,
} from '../models/index';
import {
    OHLCVFromJSON,
    OHLCVToJSON,
} from '../models/index';

export interface PoolOhlcvContractAddressRequest {
    network: string;
    poolAddress: string;
    timeframe: PoolOhlcvContractAddressTimeframeEnum;
    aggregate?: string;
    beforeTimestamp?: number;
    limit?: number;
    currency?: PoolOhlcvContractAddressCurrencyEnum;
    token?: string;
}

/**
 * OHLCVApi - interface
 * 
 * @export
 * @interface OHLCVApiInterface
 */
export interface OHLCVApiInterface {
    /**
     * This endpoint allows you to **get the OHLCV chart (Open, High, Low, Close, Volume) of a pool based on the provided pool address on a network**
     * @summary Pool OHLCV chart by Pool Address
     * @param {string} network network id  &lt;br&gt; *refers to [/networks](/reference/networks-list)
     * @param {string} poolAddress pool contract address
     * @param {'day' | 'hour' | 'minute'} timeframe timeframe of the OHLCV chart
     * @param {string} [aggregate] time period to aggregate each OHLCV &lt;br&gt; Available values (day) : &#x60;1&#x60; &lt;br&gt; Available values (hour) : &#x60;1&#x60; , &#x60;4&#x60; , &#x60;12&#x60; &lt;br&gt; Available values (minute) : &#x60;1&#x60; , &#x60;5&#x60; , &#x60;15&#x60; &lt;br&gt; Default value: 1
     * @param {number} [beforeTimestamp] return ohlcv data before this timestamp (integer seconds since epoch)
     * @param {number} [limit] number of ohlcv results to return, maximum 1000 &lt;br&gt; Default value: 100
     * @param {'usd' | 'token'} [currency] return ohlcv in USD or quote token  &lt;br&gt; Default value: usd
     * @param {string} [token] return ohlcv for token  &lt;br&gt; use this to invert the chart &lt;br&gt; Available values: \&#39;base\&#39;, \&#39;quote\&#39; or token address
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OHLCVApiInterface
     */
    poolOhlcvContractAddressRaw(requestParameters: PoolOhlcvContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OHLCV>>;

    /**
     * This endpoint allows you to **get the OHLCV chart (Open, High, Low, Close, Volume) of a pool based on the provided pool address on a network**
     * Pool OHLCV chart by Pool Address
     */
    poolOhlcvContractAddress(requestParameters: PoolOhlcvContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OHLCV>;

}

/**
 * 
 */
export class OHLCVApi extends runtime.BaseAPI implements OHLCVApiInterface {

    /**
     * This endpoint allows you to **get the OHLCV chart (Open, High, Low, Close, Volume) of a pool based on the provided pool address on a network**
     * Pool OHLCV chart by Pool Address
     */
    async poolOhlcvContractAddressRaw(requestParameters: PoolOhlcvContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OHLCV>> {
        if (requestParameters['network'] == null) {
            throw new runtime.RequiredError(
                'network',
                'Required parameter "network" was null or undefined when calling poolOhlcvContractAddress().'
            );
        }

        if (requestParameters['poolAddress'] == null) {
            throw new runtime.RequiredError(
                'poolAddress',
                'Required parameter "poolAddress" was null or undefined when calling poolOhlcvContractAddress().'
            );
        }

        if (requestParameters['timeframe'] == null) {
            throw new runtime.RequiredError(
                'timeframe',
                'Required parameter "timeframe" was null or undefined when calling poolOhlcvContractAddress().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['aggregate'] != null) {
            queryParameters['aggregate'] = requestParameters['aggregate'];
        }

        if (requestParameters['beforeTimestamp'] != null) {
            queryParameters['before_timestamp'] = requestParameters['beforeTimestamp'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['currency'] != null) {
            queryParameters['currency'] = requestParameters['currency'];
        }

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/networks/{network}/pools/{pool_address}/ohlcv/{timeframe}`.replace(`{${"network"}}`, encodeURIComponent(String(requestParameters['network']))).replace(`{${"pool_address"}}`, encodeURIComponent(String(requestParameters['poolAddress']))).replace(`{${"timeframe"}}`, encodeURIComponent(String(requestParameters['timeframe']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OHLCVFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to **get the OHLCV chart (Open, High, Low, Close, Volume) of a pool based on the provided pool address on a network**
     * Pool OHLCV chart by Pool Address
     */
    async poolOhlcvContractAddress(requestParameters: PoolOhlcvContractAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OHLCV> {
        const response = await this.poolOhlcvContractAddressRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const PoolOhlcvContractAddressTimeframeEnum = {
    Day: 'day',
    Hour: 'hour',
    Minute: 'minute'
} as const;
export type PoolOhlcvContractAddressTimeframeEnum = typeof PoolOhlcvContractAddressTimeframeEnum[keyof typeof PoolOhlcvContractAddressTimeframeEnum];
/**
 * @export
 */
export const PoolOhlcvContractAddressCurrencyEnum = {
    Usd: 'usd',
    Token: 'token'
} as const;
export type PoolOhlcvContractAddressCurrencyEnum = typeof PoolOhlcvContractAddressCurrencyEnum[keyof typeof PoolOhlcvContractAddressCurrencyEnum];

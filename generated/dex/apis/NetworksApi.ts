/* tslint:disable */
/* eslint-disable */
/**
 * On Chain DEX API (Beta)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  NetworksList,
} from '../models/index';
import {
    NetworksListFromJSON,
    NetworksListToJSON,
} from '../models/index';

export interface NetworksListRequest {
    page?: number;
}

/**
 * NetworksApi - interface
 * 
 * @export
 * @interface NetworksApiInterface
 */
export interface NetworksApiInterface {
    /**
     * This endpoint allows you to **query all the supported networks on GeckoTerminal**
     * @summary Supported Networks List (ID Map)
     * @param {number} [page] page through results &lt;br&gt; Default value: 1
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NetworksApiInterface
     */
    networksListRaw(requestParameters: NetworksListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NetworksList>>;

    /**
     * This endpoint allows you to **query all the supported networks on GeckoTerminal**
     * Supported Networks List (ID Map)
     */
    networksList(requestParameters: NetworksListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NetworksList>;

}

/**
 * 
 */
export class NetworksApi extends runtime.BaseAPI implements NetworksApiInterface {

    /**
     * This endpoint allows you to **query all the supported networks on GeckoTerminal**
     * Supported Networks List (ID Map)
     */
    async networksListRaw(requestParameters: NetworksListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<NetworksList>> {
        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/networks`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => NetworksListFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to **query all the supported networks on GeckoTerminal**
     * Supported Networks List (ID Map)
     */
    async networksList(requestParameters: NetworksListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<NetworksList> {
        const response = await this.networksListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * On Chain DEX API (Beta)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TokenDataAttributes } from './TokenDataAttributes';
import {
    TokenDataAttributesFromJSON,
    TokenDataAttributesFromJSONTyped,
    TokenDataAttributesToJSON,
    TokenDataAttributesToJSONTyped,
} from './TokenDataAttributes';
import type { TokenDataRelationships } from './TokenDataRelationships';
import {
    TokenDataRelationshipsFromJSON,
    TokenDataRelationshipsFromJSONTyped,
    TokenDataRelationshipsToJSON,
    TokenDataRelationshipsToJSONTyped,
} from './TokenDataRelationships';

/**
 * 
 * @export
 * @interface TokenData
 */
export interface TokenData {
    /**
     * 
     * @type {string}
     * @memberof TokenData
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenData
     */
    type?: string;
    /**
     * 
     * @type {TokenDataAttributes}
     * @memberof TokenData
     */
    attributes?: TokenDataAttributes;
    /**
     * 
     * @type {TokenDataRelationships}
     * @memberof TokenData
     */
    relationships?: TokenDataRelationships;
}

/**
 * Check if a given object implements the TokenData interface.
 */
export function instanceOfTokenData(value: object): value is TokenData {
    return true;
}

export function TokenDataFromJSON(json: any): TokenData {
    return TokenDataFromJSONTyped(json, false);
}

export function TokenDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenData {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'attributes': json['attributes'] == null ? undefined : TokenDataAttributesFromJSON(json['attributes']),
        'relationships': json['relationships'] == null ? undefined : TokenDataRelationshipsFromJSON(json['relationships']),
    };
}

  export function TokenDataToJSON(json: any): TokenData {
      return TokenDataToJSONTyped(json, false);
  }

  export function TokenDataToJSONTyped(value?: TokenData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'attributes': TokenDataAttributesToJSON(value['attributes']),
        'relationships': TokenDataRelationshipsToJSON(value['relationships']),
    };
}


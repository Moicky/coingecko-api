/* tslint:disable */
/* eslint-disable */
/**
 * On Chain DEX API (Beta)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TokenIncludedInner } from './TokenIncludedInner';
import {
    TokenIncludedInnerFromJSON,
    TokenIncludedInnerFromJSONTyped,
    TokenIncludedInnerToJSON,
    TokenIncludedInnerToJSONTyped,
} from './TokenIncludedInner';
import type { TokenData } from './TokenData';
import {
    TokenDataFromJSON,
    TokenDataFromJSONTyped,
    TokenDataToJSON,
    TokenDataToJSONTyped,
} from './TokenData';

/**
 * 
 * @export
 * @interface Token
 */
export interface Token {
    /**
     * 
     * @type {TokenData}
     * @memberof Token
     */
    data?: TokenData;
    /**
     * 
     * @type {Array<TokenIncludedInner>}
     * @memberof Token
     */
    included?: Array<TokenIncludedInner>;
}

/**
 * Check if a given object implements the Token interface.
 */
export function instanceOfToken(value: object): value is Token {
    return true;
}

export function TokenFromJSON(json: any): Token {
    return TokenFromJSONTyped(json, false);
}

export function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token {
    if (json == null) {
        return json;
    }
    return {
        
        'data': json['data'] == null ? undefined : TokenDataFromJSON(json['data']),
        'included': json['included'] == null ? undefined : ((json['included'] as Array<any>).map(TokenIncludedInnerFromJSON)),
    };
}

  export function TokenToJSON(json: any): Token {
      return TokenToJSONTyped(json, false);
  }

  export function TokenToJSONTyped(value?: Token | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': TokenDataToJSON(value['data']),
        'included': value['included'] == null ? undefined : ((value['included'] as Array<any>).map(TokenIncludedInnerToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Public API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoinsDataBaseTickersInnerConvertedVolume } from './CoinsDataBaseTickersInnerConvertedVolume';
import {
    CoinsDataBaseTickersInnerConvertedVolumeFromJSON,
    CoinsDataBaseTickersInnerConvertedVolumeFromJSONTyped,
    CoinsDataBaseTickersInnerConvertedVolumeToJSON,
    CoinsDataBaseTickersInnerConvertedVolumeToJSONTyped,
} from './CoinsDataBaseTickersInnerConvertedVolume';
import type { CoinsTickersTickersInnerMarket } from './CoinsTickersTickersInnerMarket';
import {
    CoinsTickersTickersInnerMarketFromJSON,
    CoinsTickersTickersInnerMarketFromJSONTyped,
    CoinsTickersTickersInnerMarketToJSON,
    CoinsTickersTickersInnerMarketToJSONTyped,
} from './CoinsTickersTickersInnerMarket';
import type { CoinsDataBaseTickersInnerConvertedLast } from './CoinsDataBaseTickersInnerConvertedLast';
import {
    CoinsDataBaseTickersInnerConvertedLastFromJSON,
    CoinsDataBaseTickersInnerConvertedLastFromJSONTyped,
    CoinsDataBaseTickersInnerConvertedLastToJSON,
    CoinsDataBaseTickersInnerConvertedLastToJSONTyped,
} from './CoinsDataBaseTickersInnerConvertedLast';

/**
 * 
 * @export
 * @interface CoinsTickersTickersInner
 */
export interface CoinsTickersTickersInner {
    /**
     * coin ticker base currency
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    base?: string;
    /**
     * coin ticker target currency
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    target?: string;
    /**
     * 
     * @type {CoinsTickersTickersInnerMarket}
     * @memberof CoinsTickersTickersInner
     */
    market?: CoinsTickersTickersInnerMarket;
    /**
     * coin ticker last price
     * @type {number}
     * @memberof CoinsTickersTickersInner
     */
    last?: number;
    /**
     * coin ticker volume
     * @type {number}
     * @memberof CoinsTickersTickersInner
     */
    volume?: number;
    /**
     * coin ticker cost to move up in usd
     * @type {number}
     * @memberof CoinsTickersTickersInner
     */
    costToMoveUpUsd?: number;
    /**
     * coin ticker cost to move down in usd
     * @type {number}
     * @memberof CoinsTickersTickersInner
     */
    costToMoveDownUsd?: number;
    /**
     * 
     * @type {CoinsDataBaseTickersInnerConvertedLast}
     * @memberof CoinsTickersTickersInner
     */
    convertedLast?: CoinsDataBaseTickersInnerConvertedLast;
    /**
     * 
     * @type {CoinsDataBaseTickersInnerConvertedVolume}
     * @memberof CoinsTickersTickersInner
     */
    convertedVolume?: CoinsDataBaseTickersInnerConvertedVolume;
    /**
     * coin ticker trust score
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    trustScore?: string;
    /**
     * coin ticker bid ask spread percentage
     * @type {number}
     * @memberof CoinsTickersTickersInner
     */
    bidAskSpreadPercentage?: number;
    /**
     * coin ticker timestamp
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    timestamp?: string;
    /**
     * coin ticker last traded timestamp
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    lastTradedAt?: string;
    /**
     * coin ticker last fetch timestamp
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    lastFetchAt?: string;
    /**
     * coin ticker anomaly
     * @type {boolean}
     * @memberof CoinsTickersTickersInner
     */
    isAnomaly?: boolean;
    /**
     * coin ticker stale
     * @type {boolean}
     * @memberof CoinsTickersTickersInner
     */
    isStale?: boolean;
    /**
     * coin ticker trade url
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    tradeUrl?: string;
    /**
     * coin ticker token info url
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    tokenInfoUrl?: string | null;
    /**
     * coin ticker base currency coin id
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    coinId?: string;
    /**
     * coin ticker target currency coin id
     * @type {string}
     * @memberof CoinsTickersTickersInner
     */
    targetCoinId?: string;
}

/**
 * Check if a given object implements the CoinsTickersTickersInner interface.
 */
export function instanceOfCoinsTickersTickersInner(value: object): value is CoinsTickersTickersInner {
    return true;
}

export function CoinsTickersTickersInnerFromJSON(json: any): CoinsTickersTickersInner {
    return CoinsTickersTickersInnerFromJSONTyped(json, false);
}

export function CoinsTickersTickersInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoinsTickersTickersInner {
    if (json == null) {
        return json;
    }
    return {
        
        'base': json['base'] == null ? undefined : json['base'],
        'target': json['target'] == null ? undefined : json['target'],
        'market': json['market'] == null ? undefined : CoinsTickersTickersInnerMarketFromJSON(json['market']),
        'last': json['last'] == null ? undefined : json['last'],
        'volume': json['volume'] == null ? undefined : json['volume'],
        'costToMoveUpUsd': json['cost_to_move_up_usd'] == null ? undefined : json['cost_to_move_up_usd'],
        'costToMoveDownUsd': json['cost_to_move_down_usd'] == null ? undefined : json['cost_to_move_down_usd'],
        'convertedLast': json['converted_last'] == null ? undefined : CoinsDataBaseTickersInnerConvertedLastFromJSON(json['converted_last']),
        'convertedVolume': json['converted_volume'] == null ? undefined : CoinsDataBaseTickersInnerConvertedVolumeFromJSON(json['converted_volume']),
        'trustScore': json['trust_score'] == null ? undefined : json['trust_score'],
        'bidAskSpreadPercentage': json['bid_ask_spread_percentage'] == null ? undefined : json['bid_ask_spread_percentage'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
        'lastTradedAt': json['last_traded_at'] == null ? undefined : json['last_traded_at'],
        'lastFetchAt': json['last_fetch_at'] == null ? undefined : json['last_fetch_at'],
        'isAnomaly': json['is_anomaly'] == null ? undefined : json['is_anomaly'],
        'isStale': json['is_stale'] == null ? undefined : json['is_stale'],
        'tradeUrl': json['trade_url'] == null ? undefined : json['trade_url'],
        'tokenInfoUrl': json['token_info_url'] == null ? undefined : json['token_info_url'],
        'coinId': json['coin_id'] == null ? undefined : json['coin_id'],
        'targetCoinId': json['target_coin_id'] == null ? undefined : json['target_coin_id'],
    };
}

  export function CoinsTickersTickersInnerToJSON(json: any): CoinsTickersTickersInner {
      return CoinsTickersTickersInnerToJSONTyped(json, false);
  }

  export function CoinsTickersTickersInnerToJSONTyped(value?: CoinsTickersTickersInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'base': value['base'],
        'target': value['target'],
        'market': CoinsTickersTickersInnerMarketToJSON(value['market']),
        'last': value['last'],
        'volume': value['volume'],
        'cost_to_move_up_usd': value['costToMoveUpUsd'],
        'cost_to_move_down_usd': value['costToMoveDownUsd'],
        'converted_last': CoinsDataBaseTickersInnerConvertedLastToJSON(value['convertedLast']),
        'converted_volume': CoinsDataBaseTickersInnerConvertedVolumeToJSON(value['convertedVolume']),
        'trust_score': value['trustScore'],
        'bid_ask_spread_percentage': value['bidAskSpreadPercentage'],
        'timestamp': value['timestamp'],
        'last_traded_at': value['lastTradedAt'],
        'last_fetch_at': value['lastFetchAt'],
        'is_anomaly': value['isAnomaly'],
        'is_stale': value['isStale'],
        'trade_url': value['tradeUrl'],
        'token_info_url': value['tokenInfoUrl'],
        'coin_id': value['coinId'],
        'target_coin_id': value['targetCoinId'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Public API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssetPlatforms
 */
export interface AssetPlatforms {
    /**
     * asset platform id
     * @type {string}
     * @memberof AssetPlatforms
     */
    id?: string;
    /**
     * chainlist's chain id
     * @type {number}
     * @memberof AssetPlatforms
     */
    chainIdentifier?: number | null;
    /**
     * chain name
     * @type {string}
     * @memberof AssetPlatforms
     */
    name?: string;
    /**
     * chain shortname
     * @type {string}
     * @memberof AssetPlatforms
     */
    shortname?: string;
    /**
     * chain native coin id
     * @type {string}
     * @memberof AssetPlatforms
     */
    nativeCoinId?: string;
    /**
     * image of the asset platform
     * @type {string}
     * @memberof AssetPlatforms
     */
    image?: string;
}

/**
 * Check if a given object implements the AssetPlatforms interface.
 */
export function instanceOfAssetPlatforms(value: object): value is AssetPlatforms {
    return true;
}

export function AssetPlatformsFromJSON(json: any): AssetPlatforms {
    return AssetPlatformsFromJSONTyped(json, false);
}

export function AssetPlatformsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetPlatforms {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'chainIdentifier': json['chain_identifier'] == null ? undefined : json['chain_identifier'],
        'name': json['name'] == null ? undefined : json['name'],
        'shortname': json['shortname'] == null ? undefined : json['shortname'],
        'nativeCoinId': json['native_coin_id'] == null ? undefined : json['native_coin_id'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

  export function AssetPlatformsToJSON(json: any): AssetPlatforms {
      return AssetPlatformsToJSONTyped(json, false);
  }

  export function AssetPlatformsToJSONTyped(value?: AssetPlatforms | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'chain_identifier': value['chainIdentifier'],
        'name': value['name'],
        'shortname': value['shortname'],
        'native_coin_id': value['nativeCoinId'],
        'image': value['image'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Public API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GlobalDataMarketCapPercentage } from './GlobalDataMarketCapPercentage';
import {
    GlobalDataMarketCapPercentageFromJSON,
    GlobalDataMarketCapPercentageFromJSONTyped,
    GlobalDataMarketCapPercentageToJSON,
    GlobalDataMarketCapPercentageToJSONTyped,
} from './GlobalDataMarketCapPercentage';
import type { GlobalDataTotalVolume } from './GlobalDataTotalVolume';
import {
    GlobalDataTotalVolumeFromJSON,
    GlobalDataTotalVolumeFromJSONTyped,
    GlobalDataTotalVolumeToJSON,
    GlobalDataTotalVolumeToJSONTyped,
} from './GlobalDataTotalVolume';
import type { GlobalDataTotalMarketCap } from './GlobalDataTotalMarketCap';
import {
    GlobalDataTotalMarketCapFromJSON,
    GlobalDataTotalMarketCapFromJSONTyped,
    GlobalDataTotalMarketCapToJSON,
    GlobalDataTotalMarketCapToJSONTyped,
} from './GlobalDataTotalMarketCap';

/**
 * 
 * @export
 * @interface GlobalData
 */
export interface GlobalData {
    /**
     * number of active cryptocurrencies
     * @type {number}
     * @memberof GlobalData
     */
    activeCryptocurrencies?: number;
    /**
     * number of upcoming icos
     * @type {number}
     * @memberof GlobalData
     */
    upcomingIcos?: number;
    /**
     * number of ongoing icos
     * @type {number}
     * @memberof GlobalData
     */
    ongoingIcos?: number;
    /**
     * number of ended icos
     * @type {number}
     * @memberof GlobalData
     */
    endedIcos?: number;
    /**
     * number of exchanges
     * @type {number}
     * @memberof GlobalData
     */
    markets?: number;
    /**
     * 
     * @type {GlobalDataTotalMarketCap}
     * @memberof GlobalData
     */
    totalMarketCap?: GlobalDataTotalMarketCap;
    /**
     * 
     * @type {GlobalDataTotalVolume}
     * @memberof GlobalData
     */
    totalVolume?: GlobalDataTotalVolume;
    /**
     * 
     * @type {GlobalDataMarketCapPercentage}
     * @memberof GlobalData
     */
    marketCapPercentage?: GlobalDataMarketCapPercentage;
}

/**
 * Check if a given object implements the GlobalData interface.
 */
export function instanceOfGlobalData(value: object): value is GlobalData {
    return true;
}

export function GlobalDataFromJSON(json: any): GlobalData {
    return GlobalDataFromJSONTyped(json, false);
}

export function GlobalDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalData {
    if (json == null) {
        return json;
    }
    return {
        
        'activeCryptocurrencies': json['active_cryptocurrencies'] == null ? undefined : json['active_cryptocurrencies'],
        'upcomingIcos': json['upcoming_icos'] == null ? undefined : json['upcoming_icos'],
        'ongoingIcos': json['ongoing_icos'] == null ? undefined : json['ongoing_icos'],
        'endedIcos': json['ended_icos'] == null ? undefined : json['ended_icos'],
        'markets': json['markets'] == null ? undefined : json['markets'],
        'totalMarketCap': json['total_market_cap'] == null ? undefined : GlobalDataTotalMarketCapFromJSON(json['total_market_cap']),
        'totalVolume': json['total_volume'] == null ? undefined : GlobalDataTotalVolumeFromJSON(json['total_volume']),
        'marketCapPercentage': json['market_cap_percentage'] == null ? undefined : GlobalDataMarketCapPercentageFromJSON(json['market_cap_percentage']),
    };
}

  export function GlobalDataToJSON(json: any): GlobalData {
      return GlobalDataToJSONTyped(json, false);
  }

  export function GlobalDataToJSONTyped(value?: GlobalData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active_cryptocurrencies': value['activeCryptocurrencies'],
        'upcoming_icos': value['upcomingIcos'],
        'ongoing_icos': value['ongoingIcos'],
        'ended_icos': value['endedIcos'],
        'markets': value['markets'],
        'total_market_cap': GlobalDataTotalMarketCapToJSON(value['totalMarketCap']),
        'total_volume': GlobalDataTotalVolumeToJSON(value['totalVolume']),
        'market_cap_percentage': GlobalDataMarketCapPercentageToJSON(value['marketCapPercentage']),
    };
}


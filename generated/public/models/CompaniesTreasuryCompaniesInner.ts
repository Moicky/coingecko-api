/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Public API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompaniesTreasuryCompaniesInner
 */
export interface CompaniesTreasuryCompaniesInner {
    /**
     * company name
     * @type {string}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    name?: string;
    /**
     * company symbol
     * @type {string}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    symbol?: string;
    /**
     * company incorporated country
     * @type {string}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    country?: string;
    /**
     * total btc/eth holdings of company
     * @type {number}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    totalHoldings?: number;
    /**
     * total entry value in usd
     * @type {number}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    totalEntryValueUsd?: number;
    /**
     * total current value of btc/eth holdings in usd
     * @type {number}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    totalCurrentValueUsd?: number;
    /**
     * percentage of total btc/eth supply
     * @type {number}
     * @memberof CompaniesTreasuryCompaniesInner
     */
    percentageOfTotalSupply?: number;
}

/**
 * Check if a given object implements the CompaniesTreasuryCompaniesInner interface.
 */
export function instanceOfCompaniesTreasuryCompaniesInner(value: object): value is CompaniesTreasuryCompaniesInner {
    return true;
}

export function CompaniesTreasuryCompaniesInnerFromJSON(json: any): CompaniesTreasuryCompaniesInner {
    return CompaniesTreasuryCompaniesInnerFromJSONTyped(json, false);
}

export function CompaniesTreasuryCompaniesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompaniesTreasuryCompaniesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'symbol': json['symbol'] == null ? undefined : json['symbol'],
        'country': json['country'] == null ? undefined : json['country'],
        'totalHoldings': json['total_holdings'] == null ? undefined : json['total_holdings'],
        'totalEntryValueUsd': json['total_entry_value_usd'] == null ? undefined : json['total_entry_value_usd'],
        'totalCurrentValueUsd': json['total_current_value_usd'] == null ? undefined : json['total_current_value_usd'],
        'percentageOfTotalSupply': json['percentage_of_total_supply'] == null ? undefined : json['percentage_of_total_supply'],
    };
}

  export function CompaniesTreasuryCompaniesInnerToJSON(json: any): CompaniesTreasuryCompaniesInner {
      return CompaniesTreasuryCompaniesInnerToJSONTyped(json, false);
  }

  export function CompaniesTreasuryCompaniesInnerToJSONTyped(value?: CompaniesTreasuryCompaniesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'symbol': value['symbol'],
        'country': value['country'],
        'total_holdings': value['totalHoldings'],
        'total_entry_value_usd': value['totalEntryValueUsd'],
        'total_current_value_usd': value['totalCurrentValueUsd'],
        'percentage_of_total_supply': value['percentageOfTotalSupply'],
    };
}


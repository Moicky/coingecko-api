/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Public API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchExchangesInner
 */
export interface SearchExchangesInner {
    /**
     * exchange id
     * @type {string}
     * @memberof SearchExchangesInner
     */
    id?: string;
    /**
     * exchange name
     * @type {string}
     * @memberof SearchExchangesInner
     */
    name?: string;
    /**
     * exchange market type
     * @type {string}
     * @memberof SearchExchangesInner
     */
    marketType?: string;
    /**
     * exchange thumb image url
     * @type {string}
     * @memberof SearchExchangesInner
     */
    thumb?: string;
    /**
     * exchange large image url
     * @type {string}
     * @memberof SearchExchangesInner
     */
    large?: string;
}

/**
 * Check if a given object implements the SearchExchangesInner interface.
 */
export function instanceOfSearchExchangesInner(value: object): value is SearchExchangesInner {
    return true;
}

export function SearchExchangesInnerFromJSON(json: any): SearchExchangesInner {
    return SearchExchangesInnerFromJSONTyped(json, false);
}

export function SearchExchangesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchExchangesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'marketType': json['market_type'] == null ? undefined : json['market_type'],
        'thumb': json['thumb'] == null ? undefined : json['thumb'],
        'large': json['large'] == null ? undefined : json['large'],
    };
}

  export function SearchExchangesInnerToJSON(json: any): SearchExchangesInner {
      return SearchExchangesInnerToJSONTyped(json, false);
  }

  export function SearchExchangesInnerToJSONTyped(value?: SearchExchangesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'market_type': value['marketType'],
        'thumb': value['thumb'],
        'large': value['large'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Pro API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CompaniesTreasury,
} from '../models/index';
import {
    CompaniesTreasuryFromJSON,
    CompaniesTreasuryToJSON,
} from '../models/index';

export interface CompaniesPublicTreasuryRequest {
    coinId: CompaniesPublicTreasuryCoinIdEnum;
}

/**
 * CompaniesBetaApi - interface
 * 
 * @export
 * @interface CompaniesBetaApiInterface
 */
export interface CompaniesBetaApiInterface {
    /**
     * This endpoint allows you **query public companies’ bitcoin or ethereum holdings**.
     * @summary Public Companies Holdings
     * @param {'bitcoin' | 'ethereum'} coinId coin id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CompaniesBetaApiInterface
     */
    companiesPublicTreasuryRaw(requestParameters: CompaniesPublicTreasuryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompaniesTreasury>>;

    /**
     * This endpoint allows you **query public companies’ bitcoin or ethereum holdings**.
     * Public Companies Holdings
     */
    companiesPublicTreasury(requestParameters: CompaniesPublicTreasuryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompaniesTreasury>;

}

/**
 * 
 */
export class CompaniesBetaApi extends runtime.BaseAPI implements CompaniesBetaApiInterface {

    /**
     * This endpoint allows you **query public companies’ bitcoin or ethereum holdings**.
     * Public Companies Holdings
     */
    async companiesPublicTreasuryRaw(requestParameters: CompaniesPublicTreasuryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompaniesTreasury>> {
        if (requestParameters['coinId'] == null) {
            throw new runtime.RequiredError(
                'coinId',
                'Required parameter "coinId" was null or undefined when calling companiesPublicTreasury().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/companies/public_treasury/{coin_id}`.replace(`{${"coin_id"}}`, encodeURIComponent(String(requestParameters['coinId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CompaniesTreasuryFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you **query public companies’ bitcoin or ethereum holdings**.
     * Public Companies Holdings
     */
    async companiesPublicTreasury(requestParameters: CompaniesPublicTreasuryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompaniesTreasury> {
        const response = await this.companiesPublicTreasuryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const CompaniesPublicTreasuryCoinIdEnum = {
    Bitcoin: 'bitcoin',
    Ethereum: 'ethereum'
} as const;
export type CompaniesPublicTreasuryCoinIdEnum = typeof CompaniesPublicTreasuryCoinIdEnum[keyof typeof CompaniesPublicTreasuryCoinIdEnum];

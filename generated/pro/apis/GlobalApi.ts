/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Pro API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Global,
  GlobalDeFi,
  GlobalMarketCapChart,
} from '../models/index';
import {
    GlobalFromJSON,
    GlobalToJSON,
    GlobalDeFiFromJSON,
    GlobalDeFiToJSON,
    GlobalMarketCapChartFromJSON,
    GlobalMarketCapChartToJSON,
} from '../models/index';

export interface GlobalMarketCapChartRequest {
    days: GlobalMarketCapChartDaysEnum;
    vsCurrency?: string;
}

/**
 * 
 */
export class GlobalApi extends runtime.BaseAPI {

    /**
     * This endpoint allows you **query cryptocurrency global data including active cryptocurrencies, markets, total crypto market cap and etc**.
     * Crypto Global Market Data
     */
    async cryptoGlobalRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Global>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/global`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GlobalFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you **query cryptocurrency global data including active cryptocurrencies, markets, total crypto market cap and etc**.
     * Crypto Global Market Data
     */
    async cryptoGlobal(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Global> {
        const response = await this.cryptoGlobalRaw(initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you **query top 100 cryptocurrency global decentralized finance (defi) data including defi market cap, trading volume**.
     * Global De-Fi Market Data
     */
    async globalDeFiRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GlobalDeFi>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/global/decentralized_finance_defi`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GlobalDeFiFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you **query top 100 cryptocurrency global decentralized finance (defi) data including defi market cap, trading volume**.
     * Global De-Fi Market Data
     */
    async globalDeFi(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GlobalDeFi> {
        const response = await this.globalDeFiRaw(initOverrides);
        return await response.value();
    }

    /**
     * This endpoint allows you to **query historical global market cap and volume data by number of days away from now**
     * ðŸ’¼ Global Market Cap Chart Data
     */
    async globalMarketCapChartRaw(requestParameters: GlobalMarketCapChartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GlobalMarketCapChart>> {
        if (requestParameters['days'] == null) {
            throw new runtime.RequiredError(
                'days',
                'Required parameter "days" was null or undefined when calling globalMarketCapChart().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['days'] != null) {
            queryParameters['days'] = requestParameters['days'];
        }

        if (requestParameters['vsCurrency'] != null) {
            queryParameters['vs_currency'] = requestParameters['vsCurrency'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["x_cg_pro_api_key"] = await this.configuration.apiKey("x_cg_pro_api_key"); // apiKeyQueryParam authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-cg-pro-api-key"] = await this.configuration.apiKey("x-cg-pro-api-key"); // apiKeyAuth authentication
        }

        const response = await this.request({
            path: `/global/market_cap_chart`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GlobalMarketCapChartFromJSON(jsonValue));
    }

    /**
     * This endpoint allows you to **query historical global market cap and volume data by number of days away from now**
     * ðŸ’¼ Global Market Cap Chart Data
     */
    async globalMarketCapChart(requestParameters: GlobalMarketCapChartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GlobalMarketCapChart> {
        const response = await this.globalMarketCapChartRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GlobalMarketCapChartDaysEnum = {
    _1: '1',
    _7: '7',
    _14: '14',
    _30: '30',
    _90: '90',
    _180: '180',
    _365: '365',
    Max: 'max'
} as const;
export type GlobalMarketCapChartDaysEnum = typeof GlobalMarketCapChartDaysEnum[keyof typeof GlobalMarketCapChartDaysEnum];

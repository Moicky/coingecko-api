/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Pro API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * nft collection all time highs
 * @export
 * @interface NFTDataAth
 */
export interface NFTDataAth {
    /**
     * 
     * @type {number}
     * @memberof NFTDataAth
     */
    nativeCurrency?: number;
    /**
     * 
     * @type {number}
     * @memberof NFTDataAth
     */
    usd?: number;
}

/**
 * Check if a given object implements the NFTDataAth interface.
 */
export function instanceOfNFTDataAth(value: object): value is NFTDataAth {
    return true;
}

export function NFTDataAthFromJSON(json: any): NFTDataAth {
    return NFTDataAthFromJSONTyped(json, false);
}

export function NFTDataAthFromJSONTyped(json: any, ignoreDiscriminator: boolean): NFTDataAth {
    if (json == null) {
        return json;
    }
    return {
        
        'nativeCurrency': json['native_currency'] == null ? undefined : json['native_currency'],
        'usd': json['usd'] == null ? undefined : json['usd'],
    };
}

  export function NFTDataAthToJSON(json: any): NFTDataAth {
      return NFTDataAthToJSONTyped(json, false);
  }

  export function NFTDataAthToJSONTyped(value?: NFTDataAth | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'native_currency': value['nativeCurrency'],
        'usd': value['usd'],
    };
}


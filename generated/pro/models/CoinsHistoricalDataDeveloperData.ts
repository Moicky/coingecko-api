/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Pro API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4Weeks } from './CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4Weeks';
import {
    CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4WeeksFromJSON,
    CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4WeeksFromJSONTyped,
    CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4WeeksToJSON,
    CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4WeeksToJSONTyped,
} from './CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4Weeks';

/**
 * coin developer data
 * @export
 * @interface CoinsHistoricalDataDeveloperData
 */
export interface CoinsHistoricalDataDeveloperData {
    /**
     * coin repository forks
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    forks?: number;
    /**
     * coin repository stars
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    stars?: number;
    /**
     * coin repository subscribers
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    subscribers?: number;
    /**
     * coin repository total issues
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    totalIssues?: number;
    /**
     * coin repository closed issues
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    closedIssues?: number;
    /**
     * coin repository pull requests merged
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    pullRequestsMerged?: number;
    /**
     * coin repository pull request contributors
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    pullRequestContributors?: number;
    /**
     * 
     * @type {CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4Weeks}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    codeAdditionsDeletions4Weeks?: CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4Weeks;
    /**
     * coin commit count 4 weeks
     * @type {number}
     * @memberof CoinsHistoricalDataDeveloperData
     */
    commitCount4Weeks?: number;
}

/**
 * Check if a given object implements the CoinsHistoricalDataDeveloperData interface.
 */
export function instanceOfCoinsHistoricalDataDeveloperData(value: object): value is CoinsHistoricalDataDeveloperData {
    return true;
}

export function CoinsHistoricalDataDeveloperDataFromJSON(json: any): CoinsHistoricalDataDeveloperData {
    return CoinsHistoricalDataDeveloperDataFromJSONTyped(json, false);
}

export function CoinsHistoricalDataDeveloperDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoinsHistoricalDataDeveloperData {
    if (json == null) {
        return json;
    }
    return {
        
        'forks': json['forks'] == null ? undefined : json['forks'],
        'stars': json['stars'] == null ? undefined : json['stars'],
        'subscribers': json['subscribers'] == null ? undefined : json['subscribers'],
        'totalIssues': json['total_issues'] == null ? undefined : json['total_issues'],
        'closedIssues': json['closed_issues'] == null ? undefined : json['closed_issues'],
        'pullRequestsMerged': json['pull_requests_merged'] == null ? undefined : json['pull_requests_merged'],
        'pullRequestContributors': json['pull_request_contributors'] == null ? undefined : json['pull_request_contributors'],
        'codeAdditionsDeletions4Weeks': json['code_additions_deletions_4_weeks'] == null ? undefined : CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4WeeksFromJSON(json['code_additions_deletions_4_weeks']),
        'commitCount4Weeks': json['commit_count_4_weeks'] == null ? undefined : json['commit_count_4_weeks'],
    };
}

  export function CoinsHistoricalDataDeveloperDataToJSON(json: any): CoinsHistoricalDataDeveloperData {
      return CoinsHistoricalDataDeveloperDataToJSONTyped(json, false);
  }

  export function CoinsHistoricalDataDeveloperDataToJSONTyped(value?: CoinsHistoricalDataDeveloperData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'forks': value['forks'],
        'stars': value['stars'],
        'subscribers': value['subscribers'],
        'total_issues': value['totalIssues'],
        'closed_issues': value['closedIssues'],
        'pull_requests_merged': value['pullRequestsMerged'],
        'pull_request_contributors': value['pullRequestContributors'],
        'code_additions_deletions_4_weeks': CoinsHistoricalDataDeveloperDataCodeAdditionsDeletions4WeeksToJSON(value['codeAdditionsDeletions4Weeks']),
        'commit_count_4_weeks': value['commitCount4Weeks'],
    };
}


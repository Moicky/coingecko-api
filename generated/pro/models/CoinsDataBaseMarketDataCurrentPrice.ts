/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Pro API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * coin current price in currency
 * @export
 * @interface CoinsDataBaseMarketDataCurrentPrice
 */
export interface CoinsDataBaseMarketDataCurrentPrice {
    /**
     * 
     * @type {number}
     * @memberof CoinsDataBaseMarketDataCurrentPrice
     */
    btc?: number;
    /**
     * 
     * @type {number}
     * @memberof CoinsDataBaseMarketDataCurrentPrice
     */
    eur?: number;
    /**
     * 
     * @type {number}
     * @memberof CoinsDataBaseMarketDataCurrentPrice
     */
    usd?: number;
}

/**
 * Check if a given object implements the CoinsDataBaseMarketDataCurrentPrice interface.
 */
export function instanceOfCoinsDataBaseMarketDataCurrentPrice(value: object): value is CoinsDataBaseMarketDataCurrentPrice {
    return true;
}

export function CoinsDataBaseMarketDataCurrentPriceFromJSON(json: any): CoinsDataBaseMarketDataCurrentPrice {
    return CoinsDataBaseMarketDataCurrentPriceFromJSONTyped(json, false);
}

export function CoinsDataBaseMarketDataCurrentPriceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoinsDataBaseMarketDataCurrentPrice {
    if (json == null) {
        return json;
    }
    return {
        
        'btc': json['btc'] == null ? undefined : json['btc'],
        'eur': json['eur'] == null ? undefined : json['eur'],
        'usd': json['usd'] == null ? undefined : json['usd'],
    };
}

  export function CoinsDataBaseMarketDataCurrentPriceToJSON(json: any): CoinsDataBaseMarketDataCurrentPrice {
      return CoinsDataBaseMarketDataCurrentPriceToJSONTyped(json, false);
  }

  export function CoinsDataBaseMarketDataCurrentPriceToJSONTyped(value?: CoinsDataBaseMarketDataCurrentPrice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'btc': value['btc'],
        'eur': value['eur'],
        'usd': value['usd'],
    };
}


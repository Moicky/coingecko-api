/* tslint:disable */
/* eslint-disable */
/**
 * CoinGecko Pro API V3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenListsTokensInner
 */
export interface TokenListsTokensInner {
    /**
     * chainlist's chain id
     * @type {number}
     * @memberof TokenListsTokensInner
     */
    chainId?: number;
    /**
     * token contract address
     * @type {string}
     * @memberof TokenListsTokensInner
     */
    address?: string;
    /**
     * token name
     * @type {string}
     * @memberof TokenListsTokensInner
     */
    name?: string;
    /**
     * token symbol
     * @type {string}
     * @memberof TokenListsTokensInner
     */
    symbol?: string;
    /**
     * token decimals
     * @type {number}
     * @memberof TokenListsTokensInner
     */
    decimals?: number;
    /**
     * token image url
     * @type {string}
     * @memberof TokenListsTokensInner
     */
    logoURI?: string;
}

/**
 * Check if a given object implements the TokenListsTokensInner interface.
 */
export function instanceOfTokenListsTokensInner(value: object): value is TokenListsTokensInner {
    return true;
}

export function TokenListsTokensInnerFromJSON(json: any): TokenListsTokensInner {
    return TokenListsTokensInnerFromJSONTyped(json, false);
}

export function TokenListsTokensInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenListsTokensInner {
    if (json == null) {
        return json;
    }
    return {
        
        'chainId': json['chainId'] == null ? undefined : json['chainId'],
        'address': json['address'] == null ? undefined : json['address'],
        'name': json['name'] == null ? undefined : json['name'],
        'symbol': json['symbol'] == null ? undefined : json['symbol'],
        'decimals': json['decimals'] == null ? undefined : json['decimals'],
        'logoURI': json['logoURI'] == null ? undefined : json['logoURI'],
    };
}

  export function TokenListsTokensInnerToJSON(json: any): TokenListsTokensInner {
      return TokenListsTokensInnerToJSONTyped(json, false);
  }

  export function TokenListsTokensInnerToJSONTyped(value?: TokenListsTokensInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chainId': value['chainId'],
        'address': value['address'],
        'name': value['name'],
        'symbol': value['symbol'],
        'decimals': value['decimals'],
        'logoURI': value['logoURI'],
    };
}

